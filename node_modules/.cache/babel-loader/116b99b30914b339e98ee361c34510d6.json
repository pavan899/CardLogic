{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Projects\\\\Rummy\\\\CardLogic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport React from 'react';\n\nvar SetValidation = function SetValidation(cards, count) {\n  // Checks if three or more cards are present\n  if (count < 3) return false;\n\n  if (count >= 3) {\n    // checks if the cards are same\n    var unique = _toConsumableArray(new Set(cards.map(function (card) {\n      return card.shape;\n    })));\n\n    if (unique.length > 1) {\n      return false;\n    }\n\n    var numbers = cards.map(function (card) {\n      return card.number;\n    });\n    console.log(\"numbers: \", numbers);\n    var differenceAry = numbers.sort(function (a, b) {\n      return a - b;\n    }).slice(1).map(function (n, i) {\n      return n - numbers[i];\n    });\n    var isSequence = differenceAry.every(function (value) {\n      return value == 1;\n    });\n\n    if (!isSequence) {\n      return false;\n    }\n\n    return true;\n  }\n};\n\nexport default SetValidation;","map":{"version":3,"names":["React","SetValidation","cards","count","unique","Set","map","card","shape","length","numbers","number","console","log","differenceAry","sort","a","b","slice","n","i","isSequence","every","value"],"sources":["C:/Projects/Rummy/CardLogic/src/Components/SetValidation.js"],"sourcesContent":["import React from 'react';\r\n\r\n\r\nconst SetValidation = (cards, count) =>{\r\n    // Checks if three or more cards are present\r\n    if(count < 3) return false;\r\n    if(count >= 3){\r\n        // checks if the cards are same\r\n        const unique = [...new Set(cards.map(card => card.shape))];\r\n        if(unique.length>1){\r\n            return false;\r\n        }\r\n        const numbers = cards.map((card)=>{\r\n            return card.number;\r\n        })\r\n        console.log(\"numbers: \", numbers)\r\n        const differenceAry = numbers.sort((a,b)=>a-b).slice(1).map(function (n, i) { return n - numbers[i]; })\r\n        const isSequence = differenceAry.every(value => value == 1)\r\n        if(!isSequence){\r\n           return false; \r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default SetValidation;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,KAAR,EAAiB;EACnC;EACA,IAAGA,KAAK,GAAG,CAAX,EAAc,OAAO,KAAP;;EACd,IAAGA,KAAK,IAAI,CAAZ,EAAc;IACV;IACA,IAAMC,MAAM,sBAAO,IAAIC,GAAJ,CAAQH,KAAK,CAACI,GAAN,CAAU,UAAAC,IAAI;MAAA,OAAIA,IAAI,CAACC,KAAT;IAAA,CAAd,CAAR,CAAP,CAAZ;;IACA,IAAGJ,MAAM,CAACK,MAAP,GAAc,CAAjB,EAAmB;MACf,OAAO,KAAP;IACH;;IACD,IAAMC,OAAO,GAAGR,KAAK,CAACI,GAAN,CAAU,UAACC,IAAD,EAAQ;MAC9B,OAAOA,IAAI,CAACI,MAAZ;IACH,CAFe,CAAhB;IAGAC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,OAAzB;IACA,IAAMI,aAAa,GAAGJ,OAAO,CAACK,IAAR,CAAa,UAACC,CAAD,EAAGC,CAAH;MAAA,OAAOD,CAAC,GAACC,CAAT;IAAA,CAAb,EAAyBC,KAAzB,CAA+B,CAA/B,EAAkCZ,GAAlC,CAAsC,UAAUa,CAAV,EAAaC,CAAb,EAAgB;MAAE,OAAOD,CAAC,GAAGT,OAAO,CAACU,CAAD,CAAlB;IAAwB,CAAhF,CAAtB;IACA,IAAMC,UAAU,GAAGP,aAAa,CAACQ,KAAd,CAAoB,UAAAC,KAAK;MAAA,OAAIA,KAAK,IAAI,CAAb;IAAA,CAAzB,CAAnB;;IACA,IAAG,CAACF,UAAJ,EAAe;MACZ,OAAO,KAAP;IACF;;IACD,OAAO,IAAP;EACH;AACJ,CApBD;;AAsBA,eAAepB,aAAf"},"metadata":{},"sourceType":"module"}