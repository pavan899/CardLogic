{"ast":null,"code":"import _slicedToArray from \"C:\\\\Projects\\\\Rummy\\\\CardLogic\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport React from 'react';\n\nvar SetValidation = function SetValidation(cards, count) {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      shape = _React$useState2[0],\n      updateShape = _React$useState2[1];\n\n  if (count < 3) return false;\n\n  if (count >= 3) {\n    cards.map(function (card) {\n      if (!shape) {\n        return updateShape(card.shape);\n      }\n\n      if (shape !== card.shape) {\n        console.log(\"valid: \", shape);\n        return false;\n      }\n    });\n  }\n};\n\nexport default SetValidation;","map":{"version":3,"names":["React","SetValidation","cards","count","useState","shape","updateShape","map","card","console","log"],"sources":["C:/Projects/Rummy/CardLogic/src/Components/SetValidation.js"],"sourcesContent":["import React from 'react';\r\n\r\n\r\nconst SetValidation = (cards, count) =>{\r\n    const [shape, updateShape] = React.useState(null)\r\n\r\n    if(count < 3) return false;\r\n    if(count >= 3){\r\n        cards.map(card => {\r\n            if(!shape){\r\n                return updateShape(card.shape);\r\n            }\r\n            if(shape!==card.shape){ \r\n                console.log(\"valid: \", shape);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport default SetValidation;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,KAAR,EAAiB;EAAA,sBACNH,KAAK,CAACI,QAAN,CAAe,IAAf,CADM;EAAA;EAAA,IAC5BC,KAD4B;EAAA,IACrBC,WADqB;;EAGnC,IAAGH,KAAK,GAAG,CAAX,EAAc,OAAO,KAAP;;EACd,IAAGA,KAAK,IAAI,CAAZ,EAAc;IACVD,KAAK,CAACK,GAAN,CAAU,UAAAC,IAAI,EAAI;MACd,IAAG,CAACH,KAAJ,EAAU;QACN,OAAOC,WAAW,CAACE,IAAI,CAACH,KAAN,CAAlB;MACH;;MACD,IAAGA,KAAK,KAAGG,IAAI,CAACH,KAAhB,EAAsB;QAClBI,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,KAAvB;QACA,OAAO,KAAP;MACH;IACJ,CARD;EASH;AACJ,CAfD;;AAiBA,eAAeJ,aAAf"},"metadata":{},"sourceType":"module"}